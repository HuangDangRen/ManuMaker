§AUDIOPATH[
§
]AUDIOPATH§
§PARTS[
§
]PARTS§
§TOOLS[
§
]TOOLS§
§TEXTFIELDS[
§Fundamentals of the Export Function
§44
]TEXTFIELDS§
§TAGS[
§background information on manumakers export to printable html; printable format; html templates; page too large; page leaks; export to html
]TAGS§
§ANNODRAFT[
§Export to printable form is recognized as a required bridge to the past One idea behind this project was to reduce paper waste.  The most common format for portable documentation is PDF Didn't use that, because the rich text editor in JavaFX (Found in the Refine Tab) is HTML based and using existing APIs I would have needed two conversion steps to extract plain text, whcih I then could feed into the ApacheProject's PDFBox.  Since the HTML in ManuMaker's editor is more than likely not very clean (start / end tags may be missing or misplaced through editing in the Refine Tabs WYSIWYG Editor and also through import of Title Slides, Chapter Slides, Tables and Warning Labels), it was forseeable that these conversion API's would not easily be convinced to produce usable results.  The chosen workaround:  -Export to HTML -Everybody with a computer has access to a webbrowser, internet is not required to view the HTML Documentation on the filesystem -Browsers offer a "print page" function, which charmingly chops the displayed web-page into segments that fit on A4 pages with extreme prejudice. -Workaround for that: Page breaks -Problem with that solution: Only works if the page's content is SHORTER than the A4 Page.   Otherwise it will leak across pages, although the next slide will still start on it's own page, so the error does, at least, not propagate. -Despite the problem: Page numbering is inserted into the page-template by the Export tool. If Slide 9 spans 1.5 pages, Slide 10 will still be labeled with the correct ordinal. there will just be a "rougue" page in-between the numbered ones.        
]ANNODRAFT§
§ANNOFINAL[
§<html dir="ltr"><head></head><body contenteditable="true"><h3><font face="Segoe UI" size="4">Some Information on ManuMaker's Export to printable HTML - Function:&nbsp;</font></h3><p></p><ul><li><span style="font-family: 'Segoe UI';">Exporting the native ManuMaker gallery format to a printable form is recognized as a required bridge to the past. <br>Printing is still a requirement in many cases, and it will still be for a while.<br><br></span></li><li><span style="font-family: 'Segoe UI';">One idea behind this project was to reduce paper waste. Therefore, if you have the opportunity to access a documentation on a portable device (e.g. Tablet PC), please consider that option. &nbsp;ManuMaker's development will go on, and there will be an effort to make the user-interface layout switchable between touchscreen and mouse-mode. <br><br></span></li><li><span style="font-family: 'Segoe UI';">The most commonly recognized format for portable documents is undoubtedly PDF. <br>The export function does not use it for the following reasons:</span></li><ul><li><span style="font-family: 'Segoe UI';">The rich text editor in JavaFX (as found in ManuMaker's Refine Tab) is HTML based and using existing APIs I would have needed two conversion steps to extract plain text from it.<br><br></span></li><li><span style="font-family: 'Segoe UI';">The result would then have been fed into e.g. the ApacheProject's PDFBox.&nbsp;<br><br></span></li><li><span style="font-family: 'Segoe UI';">Since the HTML in ManuMaker's editor is more than likely not very clean (start / end tags may be missing or misplaced through editing in the Refine Tabs WYSIWYG Editor and also through import of Title Slides, Chapter Slides, Tables and Warning Labels), it was forseeable that these conversion API's would not easily be convinced to produce usable results.&nbsp;<br><br></span></li></ul><li><span style="font-family: 'Segoe UI';">The chosen solution: Export to HTML. This was considered a good idea, because:&nbsp;</span></li><ul><li><span style="font-family: 'Segoe UI';">HTML is a very easy to use format, since it is completely open and the files can be opened and edited in plaintext-editors.</span></li><li><span style="font-family: 'Segoe UI';">As mentioned previously, ManuMaker's rich-text capabilities are HTML based (due to the JavaFX framework used)</span></li><li><span style="font-family: 'Segoe UI';">Everybody with a computer has access to a webbrowser, and an internet connection is not required to view the HTML Documentation on the filesystem.</span></li><li><span style="font-family: 'Segoe UI';">Browsers offer a "print page" function, which charmingly chops the displayed web-page into segments that fit on A4 pages with no regard for aesthetics or continuity..</span></li><ul><li><span style="font-family: 'Segoe UI';">A solution for the chopping: Page breaks are available in HTML</span></li><li><span style="font-family: 'Segoe UI';">The problem with with that solution: Page breaks do not limit the size of a page's content vertically, they only keep the </span><i style="font-family: 'Segoe UI';">following </i><span style="font-family: 'Segoe UI';">information off the current page.</span></li><li><span style="font-family: 'Segoe UI';">This works fine, if a page's content is </span><i style="font-family: 'Segoe UI';">shorter</i><span style="font-family: 'Segoe UI';"> than the A4 Page.<br></span><span style="font-family: 'Segoe UI';">Otherwise it will still leak across pages, pushing the page-break tag to the next, partially filled page.&nbsp;</span></li><li><span style="font-family: 'Segoe UI';">This way the next slide will still start on it's own page - so at least the error does not propagate.&nbsp;</span></li></ul></ul></ul><ul><li><span style="font-family: 'Segoe UI';">Despite the noted Difficulties: Page numbering is inserted into the page-template by the <b>Export Tool</b>. If Slide 9 spans 1.5 pages, Slide 10 will still be labeled with the correct ordinal (10), despite technically being the eleventh sheet of paper in the manual.&nbsp;</span><span style="font-family: 'Segoe UI';">There will just be an un-numbered "rougue" page in-between the numbered ones.<br><br></span></li><li><span style="font-family: 'Segoe UI';">With some discipline in the documentation process, pages can be kept short enough not to leak out of the A4-bounds. To check if a project is printable without page-leaks</span></li><ul><li><span style="font-family: 'Segoe UI';">Export the project to HTML</span></li><li><span style="font-family: 'Segoe UI';">Open the exported HTML documentation in a web-browser of your choice</span></li><li><span style="font-family: 'Segoe UI';">Preview the page-boundaries by using the print-preview function</span></li><li><span style="font-family: 'Segoe UI';">If a page is too long, consider splitting it's information across two slides, or shorten it by reformatting the text</span></li><li><font face="Segoe UI">Re-export and verify again</font></li></ul></ul><p></p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</body></html>&nbsp;&nbsp;
]ANNOFINAL§
